#!/bin/sh -e

sh "NVIDIA-Linux-x86_64-${2}-no-compat32.run" --extract-only
cd "NVIDIA-Linux-x86_64-${2}-no-compat32"

mkdir -p \
    "$1/usr/bin" \
    "$1/usr/lib/gbm" \
    "$1/usr/share/man/man1" \
    "$1/usr/share/egl/egl_external_platform.d" \
    "$1/usr/share/glvnd/egl_vendor.d" \
    "$1/usr/share/vulkan/icd.d" \
    "$1/usr/share/vulkan/implicit_layer.d" \
    "$1/usr/lib/modules/${KERNEL_UNAME:-$(uname -r)}/extra"

bins="
smi persistenced modprobe
"

libs="
libEGL_nvidia     libGLESv1_CM_nvidia libGLESv2_nvidia
libnvidia-eglcore libnvidia-allocator libnvidia-glsi
libnvidia-ml
"

for bin in $bins; do
    cp "nvidia-${bin}" "$1/usr/bin/"
    cp "nvidia-${bin}.1.gz" "$1/usr/share/man/man1/"
done

for lib in $libs; do
    cp "${lib}.so.$2" "$1/usr/lib/"
done

for lib in libnvidia-egl-gbm.so.1.1.0 libnvidia-egl-wayland.so.1.1.9; do
    cp "$lib" "$1/usr/lib/"
done

ln -sf ../libnvidia-allocator.so.1 "$1/usr/lib/gbm/nvidia-drm_gbm.so"

chmod 4755 "$1/usr/bin/nvidia-modprobe"

cp 10_nvidia.json "$1/usr/share/glvnd/egl_vendor.d/"
cp 10_nvidia_wayland.json "$1/usr/share/egl/egl_external_platform.d/"
cp 15_nvidia_gbm.json "$1/usr/share/egl/egl_external_platform.d/"

# https://download.nvidia.com/XFree86/Linux-x86_64/470.74/README/installedcomponents.html
# > The Vulkan ICD configuration file included with the driver references
# > libGLX_nvidia.so.0, however in environments where X11 client libraries are
# > not available, libEGL_nvidia.so.0 should be used.
sed 's|libGLX_nvidia.so.0|libEGL_nvidia.so.0|' nvidia_icd.json \
    > "$1/usr/share/vulkan/icd.d/nvidia_icd.json"
sed 's|libGLX_nvidia.so.0|libEGL_nvidia.so.0|' nvidia_layers.json \
    > "$1/usr/share/vulkan/implicit_layer.d/nvidia_layers.json"

# soname links
for lib in "$1/usr/lib/"*.so*; do
    soname=$(dirname "$lib")/$(readelf -d "$lib" | awk '/SONAME/ {print $5}' | tr -d '[]')
    base=$(printf "%s" "$soname" | sed -r 's/(.*).so.*/\1.so/')
    [ -e "$soname" ] || ln -sf "$(basename "$lib")" "$soname"
    [ -e "$base" ] || ln -sf "$(basename "$soname")" "$base"
done

# kernel modules
cd kernel
make modules
cp ./*.ko "$1/usr/lib/modules/${KERNEL_UNAME:-$(uname -r)}/extra"
